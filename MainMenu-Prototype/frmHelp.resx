<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gBCN/V8eqZj28+7yJgAAAABJRU5ErkJggg==
</value>
  </data>
</root>